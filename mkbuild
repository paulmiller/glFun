#!/usr/bin/python3

common_srcs = [
  'camera',
  'camera_control',
  'gl_util',
  'gl_viewport_control',
  'glfw_window',
  'image',
  'image_hdr',
  'image_png',
  'math3d',
  'mesh',
  'object',
  'ohno',
  'util'
]

main_srcs = [
  'main',
]

test_srcs = [
  'catch_main',
  'image_test',
  'math3d_test'
]

build = open('build.ninja', 'w')

build.write('''cc = clang++
cflags = -std=c++17 -Wall -Wextra -Wno-unused-parameter -g -O0 -Ilibs/catch
libs = -lm -lGL -lGLEW -lglfw -lpng

rule re2c
  command = re2c -W $in -o $out

rule cc
  depfile = $out.d
  command = $cc -c $cflags -MMD -MF $out.d -o $out $in

rule ln
  command = $cc $libs -o $out $in

build out/a.out: ln {main_o_files}
build out/test: ln {test_o_files}

build out/mesh_obj.cc: re2c src/mesh_obj.re.cc
build out/mesh_obj.o: cc out/mesh_obj.cc

{o_file_rules}
'''.format(
  main_o_files=' ' .join(['out/'       + src + '.o'                        for src in (common_srcs + main_srcs + ['mesh_obj'])]),
  test_o_files=' ' .join(['out/'       + src + '.o'                        for src in (common_srcs + test_srcs + ['mesh_obj'])]),
  o_file_rules='\n'.join(['build out/' + src + '.o: cc src/' + src + '.cc' for src in (common_srcs + main_srcs + test_srcs)]))
)

build.close()
